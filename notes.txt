All notes

// set up git
git remote add origin https://github.com/katratzi/cssgrid.git
git push -u origin master

// neat! emmet snippet .container>.item*3 
<div class="container">
    <div class="item"></div>
    <div class="item"></div>
    <div class="item"></div>    
</div>

// another one  .item{$}*10 
<div class="item">1</div>
<div class="item">2</div>
...
<div class="item">10</div>

// css variables
css...
:root {
  --yellow: #ffc600;
  --black: #272727;
}
// then use the yellow with 
border-bottom: 10px solid var(--yellow);

// to view the grid layout - use firefox and check out the layout tab
// lots of toggles for viewing explicit vs implicit tracks

// grid sizing... use fr for 'fractional representation'
// think free space and works as proportions
/* grid-template-columns: 1fr 1fr 1fr 1fr;

// grid sizing - span rows/columns
grid-column: span 2;
grid-row: span 2;

//repeat looks like...
repeat(4, 1fr 2fr)

// shorthand for grid-column-start & grid-column-end
grid-column: 1 / span 2;

// auto-fill - adds extra explicit tracks to fill space
// auto-fit - doesn't add the tracks.
grid-template-columns: repeat(auto-fill, 150px);
// can use auto-fill if you want to put something to the corner of the page

// minmax - this is cool, gives you a nice responsive grid
grid-template-columns: repeat(auto-fit, minmax(150px,1fr));

// can name areas (and then also use them as lines) like so
grid-template-areas: 
      "sidebar-1  content   sidebar-2"
      "sidebar-1  content   sidebar-2"
      "footer     footer    footer"

grid-column: a-start / a-end;  

// define line names with [] brackets
grid-template-columns: [site-left] 1fr [content-start] 500px [content-end] 1fr [site-right];